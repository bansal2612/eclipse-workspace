<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="0" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-06-21T12:42:22Z" name="Suite" finished-at="2020-06-21T12:42:51Z" duration-ms="28585">
    <groups>
    </groups>
    <test started-at="2020-06-21T12:42:22Z" name="Test" finished-at="2020-06-21T12:42:38Z" duration-ms="15566">
      <class name="testINT.BaseClass">
        <test-method is-config="true" signature="driverInst(java.lang.String)[pri:0, instance:testINT.BaseClass@e15b7e8]" started-at="2020-06-21T18:12:22Z" name="driverInst" finished-at="2020-06-21T18:12:29Z" duration-ms="6417" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- driverInst -->
        <test-method signature="getTest()[pri:0, instance:testINT.BaseClass@e15b7e8]" started-at="2020-06-21T18:12:29Z" name="getTest" finished-at="2020-06-21T18:12:35Z" duration-ms="6829" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]at org.testng.Assert.fail(Assert.java:96)at org.testng.Assert.failNotEquals(Assert.java:776)at org.testng.Assert.assertTrue(Assert.java:44)at org.testng.Assert.assertTrue(Assert.java:54)at testINT.BaseClass.getTest(BaseClass.java:58)at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.base/java.lang.reflect.Method.invoke(Method.java:567)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at org.testng.TestRunner.privateRun(TestRunner.java:648)at org.testng.TestRunner.run(TestRunner.java:505)at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)at org.testng.SuiteRunner.run(SuiteRunner.java:364)at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)at org.testng.TestNG.runSuites(TestNG.java:1028)at org.testng.TestNG.run(TestNG.java:996)at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTest -->
        <test-method is-config="true" signature="afterTest(org.testng.ITestResult)[pri:0, instance:testINT.BaseClass@e15b7e8]" started-at="2020-06-21T18:12:35Z" name="afterTest" finished-at="2020-06-21T18:12:38Z" duration-ms="2279" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getTest status=FAILURE method=BaseClass.getTest()[pri:0, instance:testINT.BaseClass@e15b7e8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- testINT.BaseClass -->
    </test> <!-- Test -->
    <test started-at="2020-06-21T12:42:38Z" name="Test1" finished-at="2020-06-21T12:42:51Z" duration-ms="12931">
      <class name="testINT.BaseClass">
        <test-method is-config="true" signature="driverInst(java.lang.String)[pri:0, instance:testINT.BaseClass@12aba8be]" started-at="2020-06-21T18:12:38Z" name="driverInst" finished-at="2020-06-21T18:12:43Z" duration-ms="5476" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- driverInst -->
        <test-method signature="getTest()[pri:0, instance:testINT.BaseClass@12aba8be]" started-at="2020-06-21T18:12:43Z" name="getTest" finished-at="2020-06-21T18:12:49Z" duration-ms="5922" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]at org.testng.Assert.fail(Assert.java:96)at org.testng.Assert.failNotEquals(Assert.java:776)at org.testng.Assert.assertTrue(Assert.java:44)at org.testng.Assert.assertTrue(Assert.java:54)at testINT.BaseClass.getTest(BaseClass.java:58)at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.base/java.lang.reflect.Method.invoke(Method.java:567)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at org.testng.TestRunner.privateRun(TestRunner.java:648)at org.testng.TestRunner.run(TestRunner.java:505)at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)at org.testng.SuiteRunner.run(SuiteRunner.java:364)at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)at org.testng.TestNG.runSuites(TestNG.java:1028)at org.testng.TestNG.run(TestNG.java:996)at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTest -->
        <test-method is-config="true" signature="afterTest(org.testng.ITestResult)[pri:0, instance:testINT.BaseClass@12aba8be]" started-at="2020-06-21T18:12:49Z" name="afterTest" finished-at="2020-06-21T18:12:51Z" duration-ms="1523" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getTest status=FAILURE method=BaseClass.getTest()[pri:0, instance:testINT.BaseClass@12aba8be] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- testINT.BaseClass -->
    </test> <!-- Test1 -->
  </suite> <!-- Suite -->
</testng-results>
