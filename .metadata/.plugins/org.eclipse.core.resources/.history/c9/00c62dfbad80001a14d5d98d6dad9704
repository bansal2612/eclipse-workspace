package com.birlasoft.automation.uipages;

import org.apache.log4j.Logger;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import com.birlasoft.automation.driver.TestConfig;
import com.birlasoft.utils.UIUtils;

public class ReportsPage extends AbstractPage {
	static Logger LOGGER = Logger.getLogger(ReportsPage.class);
	WebDriverWait wWait;

	public ReportsPage(WebDriver driver) {
		super(driver);
		wWait = new WebDriverWait(driver,  Integer.parseInt(TestConfig.getConfig().getPropertyValue("AVGWAITTIME")));
	}

	public void closePopup() throws Exception {
		WebElement popMainFrame = wWait.until(ExpectedConditions
				.presenceOfElementLocated(TestConfig.getInstance().getObjRep().getLocator("Common", "framePopup")));
		driver.switchTo().frame(popMainFrame);
		WebElement topFrame = wWait.until(ExpectedConditions
				.presenceOfElementLocated(TestConfig.getInstance().getObjRep().getLocator("Common", "framePopMain")));
		driver.switchTo().frame(topFrame);
		UIUtils.clickElement(driver, TestConfig.getInstance().getObjRep().getLocator("Common", "btnOK"));
		driver.switchTo().defaultContent();
	}

	@Override
	public boolean isPageOpen() {
		wWait.until(ExpectedConditions.frameToBeAvailableAndSwitchToIt("did_appframe"));
		WebElement workFrame = wWait.until(ExpectedConditions
				.presenceOfElementLocated(TestConfig.getInstance().getObjRep().getLocator("Common", "frameWork")));
		driver.switchTo().frame(workFrame);
		wWait.until(ExpectedConditions.visibilityOf(driver.findElement(TestConfig.getInstance().getObjRep().getLocator("Reports", "RunReports"))));
		//Checking whether Run Reports Checbox is visible or not.
		boolean isExist = UIUtils.isObjectExist(driver, TestConfig.getInstance().getObjRep().getLocator("Reports", "RunReports"));
		return isExist;
	}
	public void get_rpt_criteria_fields()
	{
	 try {
		 
		 WebElement did_appframe_Element=driver.findElement(By.id("did_appframe"));
		 driver.switchTo().frame(did_appframe_Element);
		 WebElement work=driver.findElement(By.name("work"));
		 driver.switchTo().frame(work);
		 WebElement rpt_criteria_fields=driver.findElement(By.name("rpt_criteria_fields"));
		 driver.switchTo().frame(rpt_criteria_fields);
		 Thread.sleep(5*1000);
		
	} catch (Exception e) {
		// TODO: handle exception
		e.printStackTrace();
	}
}
	public void get_rpt_criteria_hdr()
	{
	 try {
		 
		 WebElement did_appframe_Element=driver.findElement(By.id("did_appframe"));
		 driver.switchTo().frame(did_appframe_Element);
		 WebElement work=driver.findElement(By.name("work"));
		 driver.switchTo().frame(work);
		 WebElement rpt_criteria_hdr=driver.findElement(By.name("rpt_criteria_hdr"));
		 driver.switchTo().frame(rpt_criteria_hdr);
		 Thread.sleep(5*1000);
		
	} catch (Exception e) {
		// TODO: handle exception
		e.printStackTrace();
	}
	}
	 public void get_criteria()
		{
		 try {
			 
			 WebElement did_appframe_Element=driver.findElement(By.id("did_appframe"));
			 driver.switchTo().frame(did_appframe_Element);
			 WebElement work=driver.findElement(By.name("work"));
			 driver.switchTo().frame(work);
			 WebElement criteria=driver.findElement(By.name("criteria"));
			 driver.switchTo().frame(criteria);
			 Thread.sleep(5*1000);
			
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}
		 
}
	 public boolean waitForElement(WebElement element) throws InterruptedException
		{
			int retryCount=0;
			if(element==null && retryCount<40)
			{
				System.out.println("Test");
				Thread.sleep(5000);
				retryCount++;
			    return false;
		}
			else
				return true;
			
		}
		public boolean waitForLoader() throws InterruptedException
		{
			
			try {
				if(driver.findElement(TestConfig.getInstance().getObjRep().getLocator("Common", "Loader")).isDisplayed())
				    {
					wWait.until(ExpectedConditions.invisibilityOf(
							UIUtils.findElement(driver, TestConfig.getInstance().getObjRep().getLocator("Common", "Loader"))));
					return true;
				    }
				
			} catch (Exception e) {
				// TODO Auto-generated catch block
				return false;
			}
			return false;
						
			
			
		}
		public boolean waitForElementPreview(WebElement element,By by) throws Exception
		{
			int retryCount=0;
			if(element==null && retryCount<40)
			{
				
				Thread.sleep(5000);
				retryCount++;
				element=UIUtils.findElement(driver, by);
			    return false;
		}
			else
				return true;
			
		}
	 
	
}