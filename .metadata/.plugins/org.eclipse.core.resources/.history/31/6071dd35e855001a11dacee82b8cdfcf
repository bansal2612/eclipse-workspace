package com.birlasoft.automation.tests.client;

import java.io.File;
import java.io.IOException;
import java.lang.reflect.Method;
import java.util.List;
import java.util.NoSuchElementException;
import java.util.Random;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.StaleElementReferenceException;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.PageFactory;
import org.openqa.selenium.support.ui.ExpectedCondition;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
import org.testng.ITestResult;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.AfterSuite;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.BeforeSuite;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Ignore;
import org.testng.annotations.Test;

import com.birlasoft.automation.driver.TestConfig;
import com.birlasoft.automation.driver.TestData;
import com.birlasoft.automation.driver.TestDriver;
import com.birlasoft.automation.uipages.AssigneePage;
import com.birlasoft.automation.uipages.ClientsPage;
import com.birlasoft.automation.uipages.HomePage;
import com.birlasoft.automation.uipages.LoginPage;
import com.birlasoft.framework.ExtentManager;
import com.birlasoft.framework.LogMe;
import com.birlasoft.utils.DataLoaders;
import com.birlasoft.utils.UIUtils;
import com.relevantcodes.extentreports.LogStatus;

public class TestsClient {
	static LogMe LOGGER;
	private WebDriver driver;
	LoginPage login;
	HomePage home;
	WebDriverWait wait;	
	Random rand;

	@BeforeSuite
	public void suiteSetup() {
		
		try {
			LOGGER = new LogMe(TestsClient.class);
			TestConfig.getInstance().suiteSetup();
		} catch (Exception e) {
			LOGGER.logError("Exception " + e.getClass().getName() + " caught from suite setup method", e);
		}
		
	}

	@BeforeTest
	public void testSetup() throws Exception {
		
		driver = TestDriver.driverInstantiation(TestConfig.getInstance().getBrowserName().toUpperCase());
		LogMe.getLogger().info("Base URL is " + TestConfig.getInstance().getAppBaseURL());

		LOGGER.logInfo("*********EXECUTION STARTED**********\n\n");

		driver.get(TestConfig.getInstance().getAppBaseURL());

		driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
		driver.manage().timeouts().pageLoadTimeout(30, TimeUnit.SECONDS);
		driver.manage().timeouts().setScriptTimeout(30, TimeUnit.SECONDS);

		UIUtils.waitForPageLoad(driver);

		if (!TestConfig.getInstance().getDeviceResolution().equals("Full Screen")) {
			String[] dim = TestConfig.getInstance().getDeviceResolution().split(",");
			int dimX = Integer.parseInt(dim[0]);
			int dimY = Integer.parseInt(dim[1]);
			Dimension d = new Dimension(dimX, dimY);
			driver.manage().window().setSize(d);
		} else {
			driver.manage().window().maximize();
		}

		// Login into the application
		login = PageFactory.initElements(driver, LoginPage.class);

		// Validation whether login is displaying or not
		Assert.assertTrue(login.isPageOpen());
        
		// Trying to login into the application
		home = login.login(TestConfig.getDataConfig().getPropertyValue("userName"),
		TestConfig.getDataConfig().getPropertyValue("secret"));
		
		
		
	}

	@BeforeMethod
	public void startReporting(Method method) throws Exception {
		wait=new WebDriverWait(driver, 80);
		rand=new Random();
		LOGGER.logBeginTestCase(method.getName());
		Assert.assertTrue(home.isPageOpen());
		LOGGER.logTestStep("PASS", "Home page is displaying");
	}

	/*//@Test(description = "Cleint Search - FileNumber", priority = 1, enabled = true, dataProvider = "getClientData")
	public void tc02ClientSearch(String client, String clientNumber, String country, String status) throws Exception {
		ClientsPage clientPage = home.clickClients();
		Assert.assertTrue(clientPage.isPageOpen());
		LOGGER.logTestStep("PASS", "Client page is displaying - Click Client is successful", clientPage.takesScreenshot());
		clientPage.searchClient(client,clientNumber,country, status);		
		LOGGER.logTestStep("PASS", "Client Search Result Opened ", clientPage.takesScreenshot());		
		LOGGER.logTestStep("PASS", "Client page is verified  successful");
		
		// Validation of search results
		// Assert.assertTrue(assPage.verifyAssigneeSearch(empId, lastName, fileNumber, refNumber, ssn, country, status, type));
		// LOGGER.logTestStep("PASS", "Search successful for given criteria");
	}*/
	
	@Test(description = "Client Update test with email field only.",enabled = false,priority = 1,dataProvider = "getClientData")
	@Ignore
	public void tc01_Client_ClientUpdate(String client, String clientNumber, String country, String status) throws Exception
	{		
		   LOGGER.logInfo("Client Update test with email field only.");
		   ClientsPage clientpage=home.clickClients();
		   Assert.assertTrue(clientpage.isPageOpen());
		   clientpage.searchClient(client, clientNumber, country, status);
		   UIUtils.clickElement(driver, TestConfig.getInstance().getObjRep().getLocator("Client", "anchorLink"));
		   wait.until(ExpectedConditions.invisibilityOf(driver.findElement(TestConfig.getInstance().getObjRep().getLocator("Client", "anchorLink"))));
		   UIUtils.waitForPageLoad(driver);
		   clientpage.getWork_top();
		   UIUtils.inputText(driver,TestConfig.getInstance().getObjRep().getLocator("Client", "email") , "updatedTestEmail" + rand.nextInt(1000) + "@gmail.com");
		   clientpage.getMyBarFrame();
		   UIUtils.clickElement(driver,TestConfig.getInstance().getObjRep().getLocator("Client", "save"));
		   Thread.sleep(10000);
	}
	
	
	  @Test(description ="Add new Client", enabled=false, priority=1) 
	  @Ignore
	  public void tc02_AddNewClient() throws Exception {
	  LOGGER.logInfo("TC02_Add New Client test case started"); 
	  ClientsPage clientpage=home.clickClients(); 
	  Assert.assertTrue(clientpage.isPageOpen());
	  clientpage.getWork_top_AddnewClient();
	  UIUtils.clickElement(driver,TestConfig.getInstance().getObjRep().getLocator("Client", "Addnew"));
	  clientpage.getWork_top();
	  UIUtils.inputText(driver, TestConfig.getInstance().getObjRep().getLocator("Newclient","Name"), TestData.getData("AddClient").get("Name").toString() + rand.nextInt(1000));
	  UIUtils.inputText(driver, TestConfig.getInstance().getObjRep().getLocator("Newclient","Legal"), TestData.getData("AddClient").get("LegalName").toString() + rand.nextInt(1000));
	  UIUtils.selectValue(driver, TestConfig.getInstance().getObjRep().getLocator("Newclient","Accmanag"), "text", TestData.getData("AddClient").get("AccountManager").toString());
	  UIUtils.selectValue(driver, TestConfig.getInstance().getObjRep().getLocator("Newclient","Status"), "text", TestData.getData("AddClient").get("Status").toString());
	  UIUtils.clickElement(driver, TestConfig.getInstance().getObjRep().getLocator("Newclient","Begin"));
	  UIUtils.waitUntilElementExists(driver, TestConfig.getInstance().getObjRep().getLocator("Newclient","Currentdate"), 10);
	  UIUtils.clickElement(driver, TestConfig.getInstance().getObjRep().getLocator("Newclient","Currentdate"));
	  UIUtils.inputText(driver, TestConfig.getInstance().getObjRep().getLocator("Newclient","Address1"), TestData.getData("AddClient").get("Address1").toString() + rand.nextInt(100));
	  UIUtils.inputText(driver, TestConfig.getInstance().getObjRep().getLocator("Newclient","Address2"), TestData.getData("AddClient").get("Address2").toString() + rand.nextInt(100));
	  UIUtils.selectValue(driver, TestConfig.getInstance().getObjRep().getLocator("Newclient","Country"), "text", TestData.getData("AddClient").get("Country").toString());
	  UIUtils.inputText(driver, TestConfig.getInstance().getObjRep().getLocator("Newclient","City"), TestData.getData("AddClient").get("City").toString() + rand.nextInt(100));
	  UIUtils.selectValue(driver, TestConfig.getInstance().getObjRep().getLocator("Newclient","State"), "text", TestData.getData("AddClient").get("State").toString());
	  UIUtils.inputText(driver, TestConfig.getInstance().getObjRep().getLocator("Newclient","Postalcode"), TestData.getData("AddClient").get("PostalCode").toString());
	  UIUtils.clickElement(driver, TestConfig.getInstance().getObjRep().getLocator("Newclient","Masterfields"));
	  driver.switchTo().frame("did_master_fields");
	  UIUtils.selectValue(driver,TestConfig.getInstance().getObjRep().getLocator("Masterfields","SirvaBU"), "text", TestData.getData("AddClient").get("SirvaBuisnessUnit").toString());
	  UIUtils.selectValue(driver,TestConfig.getInstance().getObjRep().getLocator("Masterfields","Financialsys"), "text", TestData.getData("AddClient").get("FinancialSystem").toString());
	  clientpage.getMyBarFrame();
	  UIUtils.clickElement(driver,TestConfig.getInstance().getObjRep().getLocator("Client", "save"));
	  driver.switchTo().defaultContent();
	  wait.until(ExpectedConditions.frameToBeAvailableAndSwitchToIt("did_appframe"));
	  driver.switchTo().frame("work");
	  driver.switchTo().frame("work_top");
	  wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath("//a[text()='Divisions']"))));	 
	  UIUtils.clickElement(driver, TestConfig.getInstance().getObjRep().getLocator("Newclient", "Clienttype"));
	  Thread.sleep(5000);
	  driver.switchTo().defaultContent();
	    int i=1; 
		  while(i<10000) 
		  {
			  if(driver.findElement(By.xpath("//div[@id='did_appframe_display']/preceding::div[@id='styled_popup_1']/div[@class='dmode_iframe_container']")).isDisplayed())
			  {
				  break;
			  }
			  else 
				  i=i+1;
		  
		  }
	  driver.switchTo().frame(driver.findElement(TestConfig.getInstance().getObjRep().getLocator("Main", "Modalxpath")));
	  driver.switchTo().frame("frame_detail");
	  i=1; 
	  while(i<20000) 
	  {
		  if(driver.findElement(By.xpath("//label[text()='Client Connection Authorized']")).isDisplayed())
		  {
			  break;
		  }
		  else 
			  i=i+1;
	  
	  }
	  UIUtils.clickElement(driver, TestConfig.getInstance().getObjRep().getLocator("Clienttype", "ConnectionAuthorized"));
	  UIUtils.clickElement(driver, TestConfig.getInstance().getObjRep().getLocator("Clienttype", "SirvaConnect"));
	  UIUtils.clickElement(driver, TestConfig.getInstance().getObjRep().getLocator("Clienttype", "SirvaConnectEmp"));
	  UIUtils.clickElement(driver, TestConfig.getInstance().getObjRep().getLocator("Clienttype", "OnlineExpenses"));
	  driver.switchTo().parentFrame();
	  driver.switchTo().frame("frame_hdr");
	  UIUtils.clickElement(driver, TestConfig.getInstance().getObjRep().getLocator("Clienttype", "Okbutton"));
	  Thread.sleep(8000);
	  driver.switchTo().defaultContent();
	  System.out.println("Invisible");
	  driver.switchTo().frame(driver.findElement(TestConfig.getInstance().getObjRep().getLocator("App", "Appframe")));
	  System.out.println(driver);
	  driver.switchTo().frame("myBar");
      UIUtils.clickElement(driver,TestConfig.getInstance().getObjRep().getLocator("Client", "save"));
      Thread.sleep(5000);
      clientpage.getSummaryDetailsFrame();
      UIUtils.clickElement(driver, TestConfig.getInstance().getObjRep().getLocator("Newclient", "Finance"));
      driver.switchTo().defaultContent();
      wait.until(ExpectedConditions.frameToBeAvailableAndSwitchToIt("did_task_gadget_iframe"));
      UIUtils.clickElement(driver, TestConfig.getInstance().getObjRep().getLocator("Financetab", "Billing"));
      if(driver.findElement(By.xpath("//div[@id='did_se_confirm_div']//input[@value='Yes']")).isEnabled())
      {
    	  driver.findElement(By.xpath("//div[@id='did_se_confirm_div']//input[@value='Yes']")).click(); 
      }
      driver.switchTo().defaultContent();
      clientpage.getWork_top_AddnewClient();
      System.out.println("Entered into add new client frame");
      UIUtils.clickElement(driver, TestConfig.getInstance().getObjRep().getLocator("Billing", "Active"));    
      UIUtils.clickElement(driver, TestConfig.getInstance().getObjRep().getLocator("Billing", "Batchinvoice"));      
      UIUtils.selectValue(driver, TestConfig.getInstance().getObjRep().getLocator("Billing","Taxstatus"), "text", TestData.getData("AddClient").get("TaxStatus").toString());
      UIUtils.clickElement(driver, TestConfig.getInstance().getObjRep().getLocator("Billing", "Paid"));   
      UIUtils.selectValue(driver, TestConfig.getInstance().getObjRep().getLocator("Billing","Terms"), "text", TestData.getData("AddClient").get("Terms").toString());
      UIUtils.selectValue(driver, TestConfig.getInstance().getObjRep().getLocator("Billing","Invoice"), "text", TestData.getData("AddClient").get("InvoiceType").toString());
      clientpage.getMyBarFrame();
	  UIUtils.clickElement(driver,TestConfig.getInstance().getObjRep().getLocator("Client", "save"));  
	  
	  
	  
	  }
	  
	  @Test
	  public void TC03_addProgram() throws Exception
	  {
		  LOGGER.logInfo("TC03_Add program test case started");
		  ClientsPage clientpage=home.clickClients();
		  Assert.assertTrue(clientpage.isPageOpen());
		  clientpage.getWork_top_AddnewClient();
		  UIUtils.inputText(driver, TestConfig.getInstance().getObjRep().getLocator("Client", "txtClient"), "Test Client New");
		  driver.switchTo().defaultContent();
	      wait.until(ExpectedConditions.frameToBeAvailableAndSwitchToIt("did_appframe"));
	      driver.switchTo().frame("work");		
		  driver.switchTo().frame("svc_select_btns");
          UIUtils.clickElement(driver, TestConfig.getInstance().getObjRep().getLocator("Assignee", "btnSearch")); //ClientSearch 
          clientpage.getWork_bottom();
          UIUtils.clickElement(driver, TestConfig.getInstance().getObjRep().getLocator("Client", "anchorLink"));
          clientpage.getSummaryButtons();
          UIUtils.clickElement(driver, TestConfig.getInstance().getObjRep().getLocator("Newclient", "Programs"));
          driver.switchTo().defaultContent();
          driver.switchTo().frame(driver.findElement(TestConfig.getInstance().getObjRep().getLocator("Newclient", "Addprogram")));
          UIUtils.clickElement(driver, TestConfig.getInstance().getObjRep().getLocator("Programs", "Addprogram"));
          Thread.sleep(20000);
          driver.switchTo().defaultContent();
          wait.until(ExpectedConditions.frameToBeAvailableAndSwitchToIt(driver.findElement(By.xpath("//div[@id='styled_popup_1']/div[@class='dmode_iframe_container']/iframe"))));
          driver.switchTo().frame("mechparent");
          driver.switchTo().frame("mech_work");
          wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath("//textarea[@name='description']"))));
          UIUtils.clickElement(driver, TestConfig.getInstance().getObjRep().getLocator("Programs", "Programmech"));
          Thread.sleep(30000);
          driver.switchTo().defaultContent();
          wait.until(ExpectedConditions.frameToBeAvailableAndSwitchToIt(driver.findElement(By.xpath("//div[@id='styled_popup_2']/div[@class='dmode_iframe_container']/iframe"))));
          driver.switchTo().frame("work_nav");
          Thread.sleep(30000);
          int i=1;
          while(i<100000)
          {
        	  if(driver.findElement(TestConfig.getInstance().getObjRep().getLocator("Programs", "Programcopy")).isDisplayed())
        	  {
        		  break;
        	  }
        	  else 
        		  i=i+1;
          }
          UIUtils.inputText(driver, TestConfig.getInstance().getObjRep().getLocator("Programs", "Programcopy"), TestData.getData("AddClient").get("Programcopy").toString());
          UIUtils.clickElement(driver, TestConfig.getInstance().getObjRep().getLocator("Programs", "Find"));
          i=1;
          while(i<100000)
          {
        	  if(driver.findElement(TestConfig.getInstance().getObjRep().getLocator("Programs", "Result")).isDisplayed())
        	  {
        		  break;
        	  }
        	  else 
        		  i=i+1;
          }
          Thread.sleep(5000);
          UIUtils.clickElement(driver, TestConfig.getInstance().getObjRep().getLocator("Programs", "Result"));
          Thread.sleep(5000);
          driver.switchTo().defaultContent();
          i=1;
          while(i<100000)
          {
        	  if(driver.findElement(By.xpath("//div[@id='did_se_confirm_div']//td[@id='did_confirm_buttons']/input[@value='Yes']")).isDisplayed())
        	  {
        		  break;
        	  }
        	  else 
        		  i=i+1;
          }
          UIUtils.clickElement(driver, By.xpath("//div[@id='did_se_confirm_div']//td[@id='did_confirm_buttons']/input[@value='Yes']"));
          wait.until(ExpectedConditions.alertIsPresent());
          UIUtils.alertAccept(driver);
          wait.until(ExpectedConditions.frameToBeAvailableAndSwitchToIt("did_appframe"));
  		  driver.switchTo().frame("summaryButtons");
  		  UIUtils.clickElement(driver, By.xpath("//td[contains(text(),'20th Century')]"));
  		  Thread.sleep(30000);
  		  driver.switchTo().defaultContent();
  		  wait.until(ExpectedConditions.frameToBeAvailableAndSwitchToIt(driver.findElement(By.xpath("//div[@id='styled_popup_1']/div[@class='dmode_iframe_container']/iframe"))));
          driver.switchTo().frame("mechparent");
          driver.switchTo().frame("mech_work");
          UIUtils.inputText(driver, By.xpath("//td[contains(text(),'Program Name')]/following-sibling::td/input"), TestData.getData("AddClient").get("Programname").toString() + rand.nextInt(1000));
          UIUtils.clickElement(driver, By.xpath("//td[contains(text(),'Active')]/following-sibling::td/input"));
          UIUtils.selectValue(driver, By.xpath("//td[contains(text(),'Program Type')]/following-sibling::td/select"), "text", TestData.getData("AddClient").get("Programtype").toString());
          UIUtils.inputText(driver, By.xpath("//td[contains(text(),'From')]/input"), UIUtils.getCurrentDate("MM/dd/yyyy"));
          UIUtils.getCurrentDate("MM/dd/yyyy");
          driver.switchTo().parentFrame();
          driver.switchTo().frame("mech_header");
          UIUtils.clickElement(driver, By.xpath("//input[@value='Save']"));
          System.out.println("Reached");
          //Thread.sleep(10000);
          driver.switchTo().parentFrame();
          driver.switchTo().frame("mech_work");
          System.out.println("Reached1");
          wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath("//a[contains(text(),'Click here to preview')]"))));
          String name=driver.findElement(By.xpath("//td[contains(text(),'Program Name')]/following-sibling::td/input")).getAttribute("value") + "updated";
          System.out.println("Name is: " + name);
          UIUtils.inputText(driver, By.xpath("//td[contains(text(),'Program Name')]/following-sibling::td/input"), name);
          driver.switchTo().parentFrame();
          driver.switchTo().frame("mech_header");
          UIUtils.clickElement(driver, By.xpath("//input[@value='Save']"));
          WebElement close=wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath("//input[@value='Close']")));
          close.click();
          Thread.sleep(10000);	
          driver.switchTo().defaultContent();
          wait.until(ExpectedConditions.frameToBeAvailableAndSwitchToIt(driver.findElement(By.xpath("//div[@id='did_appframe_display']/iframe"))));
          driver.switchTo().frame("cp_display");
          UIUtils.clickElement(driver, By.xpath("//span[text()='Assignee']"));
          driver.switchTo().parentFrame();
          WebElement wel=wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath("//frame[@name='work']")));
          driver.switchTo().frame(wel);
          driver.switchTo().frame("work_top");
          UIUtils.clickElement(driver, By.xpath("//input[@value='Add New']"));
        
          
	  }
	 
	
	@AfterMethod
	public void testResult(Method method, ITestResult result) throws Exception {
		switch (result.getStatus()) {
		case ITestResult.SUCCESS:
			LogMe.getExtentTest().log(LogStatus.PASS, "Test Case " + method.getName() + " is pass");
			break;
		case ITestResult.FAILURE:
			LogMe.getExtentTest().log(LogStatus.FAIL, "Test Case " + method.getName() + " failed");
			break;
		case ITestResult.SKIP:
			LogMe.getExtentTest().log(LogStatus.SKIP, "Test Case " + method.getName() + "  skiped");
			break;
		default:
			break;
		}
		LOGGER.logEndTestCase(method.getName());
	}

	@AfterTest
	public void tearDown() throws Exception {
		// Trying to logout from the application
		login = home.logout();
		// Validation whether login is displaying or not
		Assert.assertTrue(login.isPageOpen());
	}

	@AfterSuite
	public void generateResult() {
		try {
			ExtentManager.getInstance().flush();
		} finally {
			ExtentManager.getInstance().close();
		}
		driver.close();
	}

	@DataProvider(name = "getClientData")
	public Object[][] getAssigneeData() throws IOException {
		String testDataPath = new File("Framework\\Test_Data\\TestData.xlsx").getCanonicalPath();
		return DataLoaders.excelDataLoader(testDataPath, "SearchClient");
	}
}